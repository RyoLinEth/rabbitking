{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/about.jsx","components/image.jsx","components/gallery.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["currentAccount","Navigation","props","useState","walletAddress","setWalletAddress","a","window","ethereum","on","requestAccount","console","log","request","method","accounts","sessionStorage","setItem","lengthAcc","length","PCButton","document","getElementById","innerText","substring","connectWallet","ethers","providers","Web3Provider","alert","useEffect","changingAccount","id","className","type","data-toggle","data-target","href","onClick","Header","data","title","paragraph","contract","Features","map","d","i","icon","text","About","src","alt","Image","largeImage","smallImage","data-lightbox-gallery","Gallery","initialState","name","email","message","Contact","setState","handleChange","e","target","value","prevState","validate","onSubmit","preventDefault","emailjs","sendForm","then","result","error","placeholder","required","onChange","rows","twitter","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","JsonData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.01425459.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { ethers } from 'ethers'\nimport './navigation.css'\nlet currentAccount = null;\nexport const Navigation = (props) => {\n\n  const [walletAddress, setWalletAddress] = useState('')\n  async function changingAccount() {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', () => {\n        requestAccount()\n      })\n    }\n  }\n\n  useEffect(() => {\n    changingAccount()\n  }, [walletAddress])\n\n  async function requestAccount() {\n    console.log('Requesting account...')\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts',\n      })\n      setWalletAddress(accounts[0])\n      currentAccount = accounts[0]\n      sessionStorage.setItem('Account', currentAccount)\n      let lengthAcc = currentAccount.length\n      let PCButton = document.getElementById(\"connect-btnPC\");\n      let MobileButton = document.getElementById(\"connect-btnMobile\");\n\n      MobileButton.innerText =\n        currentAccount.substring(0, 4) + '...' + currentAccount.substring(lengthAcc - 4, lengthAcc)\n\n      PCButton.innerText =\n        currentAccount.substring(0, 4) + '...' + currentAccount.substring(lengthAcc - 4, lengthAcc)\n    } catch (error) {\n      console.log('error connecting')\n    }\n    //Check if Metamask Exist\n    if (window.ethereum) {\n      console.log('detected')\n    } else {\n      console.log('not detected')\n    }\n  }\n\n  async function connectWallet() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      alert('Wallet connected successfully!')\n    } else {\n      alert('Please install an injected Web3 wallet')\n    }\n  }\n\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            Rabbit King\n          </a>{' '}\n          <button onClick={connectWallet} id=\"connect-btnMobile\" className=\"ForMobile\">\n            Connect Wallet\n          </button>\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#features' className='page-scroll'>\n                Mechanism\n              </a>\n            </li>\n            <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li>\n            {/* <li>\n              <a href='#portfolio' className='page-scroll'>\n                NFT\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Team\n              </a>\n            </li> */}\n            <li>\n              <a href='#contact' className='page-scroll'>\n                Contact\n              </a>\n            </li>\n            <li>\n              <button onClick={connectWallet} id=\"connect-btnPC\" className=\"ForPC\">\n                Connect Wallet\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <h3>{props.data ? props.data.paragraph : 'Loading'}</h3>\n                <h3>{props.data ? props.data.contract : 'Loading'}</h3>\n                <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>Mechanism</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-3'>\n                  {' '}\n                  <i className={d.icon}></i>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {\" \"}\n            <img src=\"img/rabbitking.png\" className=\"img-responsive\" alt=\"\" />{\" \"}\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <div className=\"about-text\">\n              <h2>About Us</h2>\n              <p>RabbitKing is a meme token looking forward to the Rabbit Year.\n                In the Rabbit Year, RabbitKing would be the king of all the memes.</p>\n              <p>With rewarding the USDT, holders become more rich if they believe in RabbitKing. <br />\n                'If you don't hold, you won't be rich' - CZ\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Image = ({ title, largeImage, smallImage }) => {\n  return (\n    <div className='portfolio-item'>\n      <div className='hover-bg'>\n        {' '}\n        <a\n          href={largeImage}\n          title={title}\n          data-lightbox-gallery='gallery1'\n        >\n          <div className='hover-text'>\n            <h4>{title}</h4>\n          </div>\n          <img\n            src={smallImage}\n            className='img-responsive'\n            alt={title}\n          />{' '}\n        </a>{' '}\n      </div>\n    </div>\n  )\n}","import { Image } from \"./image\";\nimport './gallery.css';\n\nexport const Gallery = (props) => {\n  return (\n    <div id='portfolio' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>NFT</h2>\n          <p>\n            Stake NFT to get your reward\n          </p>\n        </div>\n        <div className='row'>\n          {/* <img alt=\"Coming Soon\"/> */}\n          <div className='portfolio-items'>\n            {props.data\n              ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-sm-6 col-md-4 col-lg-4'>\n                  <Image title={d.title} largeImage={d.largeImage} smallImage={d.smallImage} />\n                </div>\n              ))\n              : 'Loading...'}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport emailjs from 'emailjs-com'\n\nconst initialState = {\n  name: '',\n  email: '',\n  message: '',\n}\nexport const Contact = (props) => {\n  const [{ name, email, message }, setState] = useState(initialState)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setState((prevState) => ({ ...prevState, [name]: value }))\n  }\n  const clearState = () => setState({ ...initialState })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(name, email, message)\n    emailjs\n      .sendForm(\n        'YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID'\n      )\n      .then(\n        (result) => {\n          console.log(result.text)\n          clearState()\n        },\n        (error) => {\n          console.log(error.text)\n        }\n      )\n      alert(\"Your message has been submitted!\")\n  }\n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n          <div className='col-md-8'>\n            <div className='row'>\n              <div className='section-title'>\n                <h2>Get In Touch</h2>\n                <p>\n                  Please fill out the form below to send us an email and we will\n                  get back to you as soon as possible.\n                </p>\n              </div>\n              <form name='sentMessage' validate onSubmit={handleSubmit}>\n                <div className='row'>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='name'\n                        name='name'\n                        className='form-control'\n                        placeholder='Name'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='email'\n                        id='email'\n                        name='email'\n                        className='form-control'\n                        placeholder='Email'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    name='message'\n                    id='message'\n                    className='form-control'\n                    rows='4'\n                    placeholder='Message'\n                    required\n                    onChange={handleChange}\n                  ></textarea>\n                  <p className='help-block text-danger'></p>\n                </div>\n                <div id='success'></div>\n                <button type='submit' className='btn btn-custom btn-lg'>\n                  Send Message\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className='col-md-12'>\n            <div className='row'>\n              <div className='social'>\n                <ul>\n                  <li>\n                    <a href={props.data ? props.data.twitter : '#'}>\n                      <i className='fa fa-twitter'></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2022 RabbitKing.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { Features } from \"./components/features\";\nimport { About } from \"./components/about\";\nimport { Gallery } from \"./components/gallery\";\nimport { Team } from \"./components/Team\";\nimport { Contact } from \"./components/contact\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Features data={landingPageData.Features} />\n      <About data={landingPageData.About} />\n      <Gallery data={landingPageData.Gallery}/>\n      {/* <Team data={landingPageData.Team} /> */}\n      <Contact data={landingPageData.Contact} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}